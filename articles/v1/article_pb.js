// source: articles/v1/article.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var content_v1_content_pb = require('../../content/v1/content_pb.js');
goog.object.extend(proto, content_v1_content_pb);
var athletes_v1_athlete_pb = require('../../athletes/v1/athlete_pb.js');
goog.object.extend(proto, athletes_v1_athlete_pb);
goog.exportSymbol('proto.paralympics.articles.v1.Article', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.ArticleByIDRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.ArticleBySlugRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.ArticleContentRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.Category', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.ErrorCode', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.FeatureArticleRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.FeatureArticleResponse', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.FeaturedArticleRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.FeaturedArticleResponse', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.Field', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.FieldError', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.Filter', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.ListArticlesRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.ListArticlesResponse', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.LiveArticlesRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.LiveArticlesResponse', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.Pagination', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.PinAthletesRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.PinAthletesResponse', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.PinnedAthletesRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.PinnedFilter', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.PinnedRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.PinnedResponse', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.PurgeRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.PurgeResponse', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.RestoreRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.RestoreResponse', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.SortDirection', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.SortField', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.SortOption', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.TogglePinnedRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.TogglePinnedResponse', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.TogglePublishRequest', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.TogglePublishResponse', null, global);
goog.exportSymbol('proto.paralympics.articles.v1.ValidationError', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.Article = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.Article, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.Article.displayName = 'proto.paralympics.articles.v1.Article';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.SortOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.SortOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.SortOption.displayName = 'proto.paralympics.articles.v1.SortOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.Filter.displayName = 'proto.paralympics.articles.v1.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.ArticleByIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.ArticleByIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.ArticleByIDRequest.displayName = 'proto.paralympics.articles.v1.ArticleByIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.ArticleBySlugRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.ArticleBySlugRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.ArticleBySlugRequest.displayName = 'proto.paralympics.articles.v1.ArticleBySlugRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.Pagination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.Pagination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.Pagination.displayName = 'proto.paralympics.articles.v1.Pagination';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.ListArticlesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.paralympics.articles.v1.ListArticlesRequest.repeatedFields_, null);
};
goog.inherits(proto.paralympics.articles.v1.ListArticlesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.ListArticlesRequest.displayName = 'proto.paralympics.articles.v1.ListArticlesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.ArticleContentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.ArticleContentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.ArticleContentRequest.displayName = 'proto.paralympics.articles.v1.ArticleContentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.TogglePublishRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.TogglePublishRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.TogglePublishRequest.displayName = 'proto.paralympics.articles.v1.TogglePublishRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.TogglePublishResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.TogglePublishResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.TogglePublishResponse.displayName = 'proto.paralympics.articles.v1.TogglePublishResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.ListArticlesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.paralympics.articles.v1.ListArticlesResponse.repeatedFields_, null);
};
goog.inherits(proto.paralympics.articles.v1.ListArticlesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.ListArticlesResponse.displayName = 'proto.paralympics.articles.v1.ListArticlesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.FieldError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.FieldError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.FieldError.displayName = 'proto.paralympics.articles.v1.FieldError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.ValidationError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.paralympics.articles.v1.ValidationError.repeatedFields_, null);
};
goog.inherits(proto.paralympics.articles.v1.ValidationError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.ValidationError.displayName = 'proto.paralympics.articles.v1.ValidationError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.FeatureArticleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.FeatureArticleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.FeatureArticleRequest.displayName = 'proto.paralympics.articles.v1.FeatureArticleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.FeatureArticleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.FeatureArticleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.FeatureArticleResponse.displayName = 'proto.paralympics.articles.v1.FeatureArticleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.FeaturedArticleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.FeaturedArticleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.FeaturedArticleRequest.displayName = 'proto.paralympics.articles.v1.FeaturedArticleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.FeaturedArticleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.FeaturedArticleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.FeaturedArticleResponse.displayName = 'proto.paralympics.articles.v1.FeaturedArticleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.LiveArticlesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.LiveArticlesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.LiveArticlesRequest.displayName = 'proto.paralympics.articles.v1.LiveArticlesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.LiveArticlesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.paralympics.articles.v1.LiveArticlesResponse.repeatedFields_, null);
};
goog.inherits(proto.paralympics.articles.v1.LiveArticlesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.LiveArticlesResponse.displayName = 'proto.paralympics.articles.v1.LiveArticlesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.PinAthletesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.paralympics.articles.v1.PinAthletesRequest.repeatedFields_, null);
};
goog.inherits(proto.paralympics.articles.v1.PinAthletesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.PinAthletesRequest.displayName = 'proto.paralympics.articles.v1.PinAthletesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.PinAthletesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.PinAthletesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.PinAthletesResponse.displayName = 'proto.paralympics.articles.v1.PinAthletesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.PinnedAthletesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.PinnedAthletesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.PinnedAthletesRequest.displayName = 'proto.paralympics.articles.v1.PinnedAthletesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.TogglePinnedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.TogglePinnedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.TogglePinnedRequest.displayName = 'proto.paralympics.articles.v1.TogglePinnedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.TogglePinnedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.TogglePinnedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.TogglePinnedResponse.displayName = 'proto.paralympics.articles.v1.TogglePinnedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.PinnedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.PinnedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.PinnedRequest.displayName = 'proto.paralympics.articles.v1.PinnedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.PinnedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.paralympics.articles.v1.PinnedResponse.repeatedFields_, null);
};
goog.inherits(proto.paralympics.articles.v1.PinnedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.PinnedResponse.displayName = 'proto.paralympics.articles.v1.PinnedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.RestoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.RestoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.RestoreRequest.displayName = 'proto.paralympics.articles.v1.RestoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.RestoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.RestoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.RestoreResponse.displayName = 'proto.paralympics.articles.v1.RestoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.PurgeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.PurgeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.PurgeRequest.displayName = 'proto.paralympics.articles.v1.PurgeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.paralympics.articles.v1.PurgeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.paralympics.articles.v1.PurgeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.paralympics.articles.v1.PurgeResponse.displayName = 'proto.paralympics.articles.v1.PurgeResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.Article.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.Article.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.Article} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.Article.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    slug: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createDate: (f = msg.getCreateDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updateDate: (f = msg.getUpdateDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deleteDate: (f = msg.getDeleteDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 6, ""),
    blurb: jspb.Message.getFieldWithDefault(msg, 7, ""),
    published: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    featured: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    publishFrom: (f = msg.getPublishFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishUntil: (f = msg.getPublishUntil()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    gameId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    sportId: jspb.Message.getFieldWithDefault(msg, 13, ""),
    live: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    imgCard: (f = msg.getImgCard()) && content_v1_content_pb.Image.toObject(includeInstance, f),
    imgHero: (f = msg.getImgHero()) && content_v1_content_pb.Image.toObject(includeInstance, f),
    rich: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    imgCardAlt: jspb.Message.getFieldWithDefault(msg, 18, ""),
    imgHeroAlt: jspb.Message.getFieldWithDefault(msg, 19, ""),
    pinned: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    category: jspb.Message.getFieldWithDefault(msg, 21, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.Article}
 */
proto.paralympics.articles.v1.Article.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.Article;
  return proto.paralympics.articles.v1.Article.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.Article} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.Article}
 */
proto.paralympics.articles.v1.Article.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateDate(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdateDate(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeleteDate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlurb(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublished(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFeatured(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishFrom(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishUntil(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSportId(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLive(value);
      break;
    case 15:
      var value = new content_v1_content_pb.Image;
      reader.readMessage(value,content_v1_content_pb.Image.deserializeBinaryFromReader);
      msg.setImgCard(value);
      break;
    case 16:
      var value = new content_v1_content_pb.Image;
      reader.readMessage(value,content_v1_content_pb.Image.deserializeBinaryFromReader);
      msg.setImgHero(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRich(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgCardAlt(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgHeroAlt(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPinned(value);
      break;
    case 21:
      var value = /** @type {!proto.paralympics.articles.v1.Category} */ (reader.readEnum());
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.Article.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.Article.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.Article} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.Article.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreateDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdateDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeleteDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBlurb();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPublished();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getFeatured();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPublishFrom();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishUntil();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getGameId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSportId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getLive();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getImgCard();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      content_v1_content_pb.Image.serializeBinaryToWriter
    );
  }
  f = message.getImgHero();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      content_v1_content_pb.Image.serializeBinaryToWriter
    );
  }
  f = message.getRich();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getImgCardAlt();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getImgHeroAlt();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getPinned();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getCategory();
  if (f !== 0.0) {
    writer.writeEnum(
      21,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.paralympics.articles.v1.Article.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Article.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string slug = 2;
 * @return {string}
 */
proto.paralympics.articles.v1.Article.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Article.prototype.setSlug = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp create_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.paralympics.articles.v1.Article.prototype.getCreateDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.paralympics.articles.v1.Article.prototype.setCreateDate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.Article.prototype.clearCreateDate = function() {
  this.setCreateDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.hasCreateDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp update_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.paralympics.articles.v1.Article.prototype.getUpdateDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.paralympics.articles.v1.Article.prototype.setUpdateDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.Article.prototype.clearUpdateDate = function() {
  this.setUpdateDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.hasUpdateDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp delete_date = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.paralympics.articles.v1.Article.prototype.getDeleteDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.paralympics.articles.v1.Article.prototype.setDeleteDate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.Article.prototype.clearDeleteDate = function() {
  this.setDeleteDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.hasDeleteDate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string title = 6;
 * @return {string}
 */
proto.paralympics.articles.v1.Article.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Article.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string blurb = 7;
 * @return {string}
 */
proto.paralympics.articles.v1.Article.prototype.getBlurb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Article.prototype.setBlurb = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool published = 8;
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.getPublished = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.paralympics.articles.v1.Article.prototype.setPublished = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool featured = 9;
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.getFeatured = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.paralympics.articles.v1.Article.prototype.setFeatured = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp publish_from = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.paralympics.articles.v1.Article.prototype.getPublishFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.paralympics.articles.v1.Article.prototype.setPublishFrom = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.Article.prototype.clearPublishFrom = function() {
  this.setPublishFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.hasPublishFrom = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp publish_until = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.paralympics.articles.v1.Article.prototype.getPublishUntil = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.paralympics.articles.v1.Article.prototype.setPublishUntil = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.Article.prototype.clearPublishUntil = function() {
  this.setPublishUntil(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.hasPublishUntil = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string game_id = 12;
 * @return {string}
 */
proto.paralympics.articles.v1.Article.prototype.getGameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Article.prototype.setGameId = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string sport_id = 13;
 * @return {string}
 */
proto.paralympics.articles.v1.Article.prototype.getSportId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Article.prototype.setSportId = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool live = 14;
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.getLive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.paralympics.articles.v1.Article.prototype.setLive = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional paralympics.content.v1.Image img_card = 15;
 * @return {?proto.paralympics.content.v1.Image}
 */
proto.paralympics.articles.v1.Article.prototype.getImgCard = function() {
  return /** @type{?proto.paralympics.content.v1.Image} */ (
    jspb.Message.getWrapperField(this, content_v1_content_pb.Image, 15));
};


/** @param {?proto.paralympics.content.v1.Image|undefined} value */
proto.paralympics.articles.v1.Article.prototype.setImgCard = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.Article.prototype.clearImgCard = function() {
  this.setImgCard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.hasImgCard = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional paralympics.content.v1.Image img_hero = 16;
 * @return {?proto.paralympics.content.v1.Image}
 */
proto.paralympics.articles.v1.Article.prototype.getImgHero = function() {
  return /** @type{?proto.paralympics.content.v1.Image} */ (
    jspb.Message.getWrapperField(this, content_v1_content_pb.Image, 16));
};


/** @param {?proto.paralympics.content.v1.Image|undefined} value */
proto.paralympics.articles.v1.Article.prototype.setImgHero = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.Article.prototype.clearImgHero = function() {
  this.setImgHero(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.hasImgHero = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool rich = 17;
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.getRich = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.paralympics.articles.v1.Article.prototype.setRich = function(value) {
  jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional string img_card_alt = 18;
 * @return {string}
 */
proto.paralympics.articles.v1.Article.prototype.getImgCardAlt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Article.prototype.setImgCardAlt = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string img_hero_alt = 19;
 * @return {string}
 */
proto.paralympics.articles.v1.Article.prototype.getImgHeroAlt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Article.prototype.setImgHeroAlt = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional bool pinned = 20;
 * @return {boolean}
 */
proto.paralympics.articles.v1.Article.prototype.getPinned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.paralympics.articles.v1.Article.prototype.setPinned = function(value) {
  jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional Category category = 21;
 * @return {!proto.paralympics.articles.v1.Category}
 */
proto.paralympics.articles.v1.Article.prototype.getCategory = function() {
  return /** @type {!proto.paralympics.articles.v1.Category} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {!proto.paralympics.articles.v1.Category} value */
proto.paralympics.articles.v1.Article.prototype.setCategory = function(value) {
  jspb.Message.setProto3EnumField(this, 21, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.SortOption.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.SortOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.SortOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.SortOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, 0),
    direction: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.SortOption}
 */
proto.paralympics.articles.v1.SortOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.SortOption;
  return proto.paralympics.articles.v1.SortOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.SortOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.SortOption}
 */
proto.paralympics.articles.v1.SortOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.paralympics.articles.v1.SortField} */ (reader.readEnum());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {!proto.paralympics.articles.v1.SortDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.SortOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.SortOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.SortOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.SortOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional SortField field = 1;
 * @return {!proto.paralympics.articles.v1.SortField}
 */
proto.paralympics.articles.v1.SortOption.prototype.getField = function() {
  return /** @type {!proto.paralympics.articles.v1.SortField} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.paralympics.articles.v1.SortField} value */
proto.paralympics.articles.v1.SortOption.prototype.setField = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional SortDirection direction = 2;
 * @return {!proto.paralympics.articles.v1.SortDirection}
 */
proto.paralympics.articles.v1.SortOption.prototype.getDirection = function() {
  return /** @type {!proto.paralympics.articles.v1.SortDirection} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.paralympics.articles.v1.SortDirection} value */
proto.paralympics.articles.v1.SortOption.prototype.setDirection = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    live: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    deleted: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    gameId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sportId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    athleteId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    notFeatured: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    pinned: jspb.Message.getFieldWithDefault(msg, 7, 0),
    category: jspb.Message.getFieldWithDefault(msg, 8, 0),
    title: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.Filter}
 */
proto.paralympics.articles.v1.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.Filter;
  return proto.paralympics.articles.v1.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.Filter}
 */
proto.paralympics.articles.v1.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLive(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleted(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSportId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAthleteId(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotFeatured(value);
      break;
    case 7:
      var value = /** @type {!proto.paralympics.articles.v1.PinnedFilter} */ (reader.readEnum());
      msg.setPinned(value);
      break;
    case 8:
      var value = /** @type {!proto.paralympics.articles.v1.Category} */ (reader.readEnum());
      msg.setCategory(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLive();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDeleted();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getGameId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSportId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAthleteId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNotFeatured();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getPinned();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getCategory();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional bool live = 1;
 * @return {boolean}
 */
proto.paralympics.articles.v1.Filter.prototype.getLive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.paralympics.articles.v1.Filter.prototype.setLive = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool deleted = 2;
 * @return {boolean}
 */
proto.paralympics.articles.v1.Filter.prototype.getDeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.paralympics.articles.v1.Filter.prototype.setDeleted = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string game_id = 3;
 * @return {string}
 */
proto.paralympics.articles.v1.Filter.prototype.getGameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Filter.prototype.setGameId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string sport_id = 4;
 * @return {string}
 */
proto.paralympics.articles.v1.Filter.prototype.getSportId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Filter.prototype.setSportId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string athlete_id = 5;
 * @return {string}
 */
proto.paralympics.articles.v1.Filter.prototype.getAthleteId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Filter.prototype.setAthleteId = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool not_featured = 6;
 * @return {boolean}
 */
proto.paralympics.articles.v1.Filter.prototype.getNotFeatured = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.paralympics.articles.v1.Filter.prototype.setNotFeatured = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional PinnedFilter pinned = 7;
 * @return {!proto.paralympics.articles.v1.PinnedFilter}
 */
proto.paralympics.articles.v1.Filter.prototype.getPinned = function() {
  return /** @type {!proto.paralympics.articles.v1.PinnedFilter} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.paralympics.articles.v1.PinnedFilter} value */
proto.paralympics.articles.v1.Filter.prototype.setPinned = function(value) {
  jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional Category category = 8;
 * @return {!proto.paralympics.articles.v1.Category}
 */
proto.paralympics.articles.v1.Filter.prototype.getCategory = function() {
  return /** @type {!proto.paralympics.articles.v1.Category} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.paralympics.articles.v1.Category} value */
proto.paralympics.articles.v1.Filter.prototype.setCategory = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string title = 9;
 * @return {string}
 */
proto.paralympics.articles.v1.Filter.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.Filter.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.ArticleByIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.ArticleByIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.ArticleByIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ArticleByIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.ArticleByIDRequest}
 */
proto.paralympics.articles.v1.ArticleByIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.ArticleByIDRequest;
  return proto.paralympics.articles.v1.ArticleByIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.ArticleByIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.ArticleByIDRequest}
 */
proto.paralympics.articles.v1.ArticleByIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.ArticleByIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.ArticleByIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.ArticleByIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ArticleByIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.paralympics.articles.v1.ArticleByIDRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.ArticleByIDRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.ArticleBySlugRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.ArticleBySlugRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.ArticleBySlugRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ArticleBySlugRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    slug: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.ArticleBySlugRequest}
 */
proto.paralympics.articles.v1.ArticleBySlugRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.ArticleBySlugRequest;
  return proto.paralympics.articles.v1.ArticleBySlugRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.ArticleBySlugRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.ArticleBySlugRequest}
 */
proto.paralympics.articles.v1.ArticleBySlugRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.ArticleBySlugRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.ArticleBySlugRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.ArticleBySlugRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ArticleBySlugRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string slug = 1;
 * @return {string}
 */
proto.paralympics.articles.v1.ArticleBySlugRequest.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.ArticleBySlugRequest.prototype.setSlug = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.Pagination.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.Pagination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.Pagination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.Pagination.toObject = function(includeInstance, msg) {
  var f, obj = {
    page: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.Pagination}
 */
proto.paralympics.articles.v1.Pagination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.Pagination;
  return proto.paralympics.articles.v1.Pagination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.Pagination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.Pagination}
 */
proto.paralympics.articles.v1.Pagination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.Pagination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.Pagination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.Pagination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.Pagination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 page = 1;
 * @return {number}
 */
proto.paralympics.articles.v1.Pagination.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.paralympics.articles.v1.Pagination.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.paralympics.articles.v1.Pagination.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.paralympics.articles.v1.Pagination.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.paralympics.articles.v1.ListArticlesRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.ListArticlesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.ListArticlesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ListArticlesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && proto.paralympics.articles.v1.Pagination.toObject(includeInstance, f),
    sortList: jspb.Message.toObjectList(msg.getSortList(),
    proto.paralympics.articles.v1.SortOption.toObject, includeInstance),
    filter: (f = msg.getFilter()) && proto.paralympics.articles.v1.Filter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.ListArticlesRequest}
 */
proto.paralympics.articles.v1.ListArticlesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.ListArticlesRequest;
  return proto.paralympics.articles.v1.ListArticlesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.ListArticlesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.ListArticlesRequest}
 */
proto.paralympics.articles.v1.ListArticlesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.paralympics.articles.v1.Pagination;
      reader.readMessage(value,proto.paralympics.articles.v1.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 2:
      var value = new proto.paralympics.articles.v1.SortOption;
      reader.readMessage(value,proto.paralympics.articles.v1.SortOption.deserializeBinaryFromReader);
      msg.addSort(value);
      break;
    case 3:
      var value = new proto.paralympics.articles.v1.Filter;
      reader.readMessage(value,proto.paralympics.articles.v1.Filter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.ListArticlesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.ListArticlesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ListArticlesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.paralympics.articles.v1.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getSortList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.paralympics.articles.v1.SortOption.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.paralympics.articles.v1.Filter.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pagination pagination = 1;
 * @return {?proto.paralympics.articles.v1.Pagination}
 */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.getPagination = function() {
  return /** @type{?proto.paralympics.articles.v1.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.paralympics.articles.v1.Pagination, 1));
};


/** @param {?proto.paralympics.articles.v1.Pagination|undefined} value */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated SortOption sort = 2;
 * @return {!Array<!proto.paralympics.articles.v1.SortOption>}
 */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.getSortList = function() {
  return /** @type{!Array<!proto.paralympics.articles.v1.SortOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.paralympics.articles.v1.SortOption, 2));
};


/** @param {!Array<!proto.paralympics.articles.v1.SortOption>} value */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.setSortList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.paralympics.articles.v1.SortOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.paralympics.articles.v1.SortOption}
 */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.addSort = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.paralympics.articles.v1.SortOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.clearSortList = function() {
  this.setSortList([]);
};


/**
 * optional Filter filter = 3;
 * @return {?proto.paralympics.articles.v1.Filter}
 */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.getFilter = function() {
  return /** @type{?proto.paralympics.articles.v1.Filter} */ (
    jspb.Message.getWrapperField(this, proto.paralympics.articles.v1.Filter, 3));
};


/** @param {?proto.paralympics.articles.v1.Filter|undefined} value */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.setFilter = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.clearFilter = function() {
  this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.ListArticlesRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.ArticleContentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.ArticleContentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.ArticleContentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ArticleContentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    articleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    articleSlug: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.ArticleContentRequest}
 */
proto.paralympics.articles.v1.ArticleContentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.ArticleContentRequest;
  return proto.paralympics.articles.v1.ArticleContentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.ArticleContentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.ArticleContentRequest}
 */
proto.paralympics.articles.v1.ArticleContentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setArticleId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setArticleSlug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.ArticleContentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.ArticleContentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.ArticleContentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ArticleContentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArticleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getArticleSlug();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string article_id = 1;
 * @return {string}
 */
proto.paralympics.articles.v1.ArticleContentRequest.prototype.getArticleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.ArticleContentRequest.prototype.setArticleId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string article_slug = 2;
 * @return {string}
 */
proto.paralympics.articles.v1.ArticleContentRequest.prototype.getArticleSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.ArticleContentRequest.prototype.setArticleSlug = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.TogglePublishRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.TogglePublishRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.TogglePublishRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.TogglePublishRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.TogglePublishRequest}
 */
proto.paralympics.articles.v1.TogglePublishRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.TogglePublishRequest;
  return proto.paralympics.articles.v1.TogglePublishRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.TogglePublishRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.TogglePublishRequest}
 */
proto.paralympics.articles.v1.TogglePublishRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.TogglePublishRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.TogglePublishRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.TogglePublishRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.TogglePublishRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.paralympics.articles.v1.TogglePublishRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.TogglePublishRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.TogglePublishResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.TogglePublishResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.TogglePublishResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.TogglePublishResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    published: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.TogglePublishResponse}
 */
proto.paralympics.articles.v1.TogglePublishResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.TogglePublishResponse;
  return proto.paralympics.articles.v1.TogglePublishResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.TogglePublishResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.TogglePublishResponse}
 */
proto.paralympics.articles.v1.TogglePublishResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublished(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.TogglePublishResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.TogglePublishResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.TogglePublishResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.TogglePublishResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublished();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool published = 1;
 * @return {boolean}
 */
proto.paralympics.articles.v1.TogglePublishResponse.prototype.getPublished = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.paralympics.articles.v1.TogglePublishResponse.prototype.setPublished = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.paralympics.articles.v1.ListArticlesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.ListArticlesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.ListArticlesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.ListArticlesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ListArticlesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    articlesList: jspb.Message.toObjectList(msg.getArticlesList(),
    proto.paralympics.articles.v1.Article.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.ListArticlesResponse}
 */
proto.paralympics.articles.v1.ListArticlesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.ListArticlesResponse;
  return proto.paralympics.articles.v1.ListArticlesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.ListArticlesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.ListArticlesResponse}
 */
proto.paralympics.articles.v1.ListArticlesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.paralympics.articles.v1.Article;
      reader.readMessage(value,proto.paralympics.articles.v1.Article.deserializeBinaryFromReader);
      msg.addArticles(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.ListArticlesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.ListArticlesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.ListArticlesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ListArticlesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArticlesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.paralympics.articles.v1.Article.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated Article articles = 1;
 * @return {!Array<!proto.paralympics.articles.v1.Article>}
 */
proto.paralympics.articles.v1.ListArticlesResponse.prototype.getArticlesList = function() {
  return /** @type{!Array<!proto.paralympics.articles.v1.Article>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.paralympics.articles.v1.Article, 1));
};


/** @param {!Array<!proto.paralympics.articles.v1.Article>} value */
proto.paralympics.articles.v1.ListArticlesResponse.prototype.setArticlesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.paralympics.articles.v1.Article=} opt_value
 * @param {number=} opt_index
 * @return {!proto.paralympics.articles.v1.Article}
 */
proto.paralympics.articles.v1.ListArticlesResponse.prototype.addArticles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.paralympics.articles.v1.Article, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.paralympics.articles.v1.ListArticlesResponse.prototype.clearArticlesList = function() {
  this.setArticlesList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.paralympics.articles.v1.ListArticlesResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.paralympics.articles.v1.ListArticlesResponse.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.FieldError.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.FieldError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.FieldError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.FieldError.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.FieldError}
 */
proto.paralympics.articles.v1.FieldError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.FieldError;
  return proto.paralympics.articles.v1.FieldError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.FieldError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.FieldError}
 */
proto.paralympics.articles.v1.FieldError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.paralympics.articles.v1.Field} */ (reader.readEnum());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {!proto.paralympics.articles.v1.ErrorCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.FieldError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.FieldError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.FieldError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.FieldError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional Field field = 1;
 * @return {!proto.paralympics.articles.v1.Field}
 */
proto.paralympics.articles.v1.FieldError.prototype.getField = function() {
  return /** @type {!proto.paralympics.articles.v1.Field} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.paralympics.articles.v1.Field} value */
proto.paralympics.articles.v1.FieldError.prototype.setField = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ErrorCode code = 2;
 * @return {!proto.paralympics.articles.v1.ErrorCode}
 */
proto.paralympics.articles.v1.FieldError.prototype.getCode = function() {
  return /** @type {!proto.paralympics.articles.v1.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.paralympics.articles.v1.ErrorCode} value */
proto.paralympics.articles.v1.FieldError.prototype.setCode = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.paralympics.articles.v1.ValidationError.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.ValidationError.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.ValidationError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.ValidationError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ValidationError.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.paralympics.articles.v1.FieldError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.ValidationError}
 */
proto.paralympics.articles.v1.ValidationError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.ValidationError;
  return proto.paralympics.articles.v1.ValidationError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.ValidationError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.ValidationError}
 */
proto.paralympics.articles.v1.ValidationError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.paralympics.articles.v1.FieldError;
      reader.readMessage(value,proto.paralympics.articles.v1.FieldError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.ValidationError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.ValidationError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.ValidationError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.ValidationError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.paralympics.articles.v1.FieldError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FieldError errors = 1;
 * @return {!Array<!proto.paralympics.articles.v1.FieldError>}
 */
proto.paralympics.articles.v1.ValidationError.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.paralympics.articles.v1.FieldError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.paralympics.articles.v1.FieldError, 1));
};


/** @param {!Array<!proto.paralympics.articles.v1.FieldError>} value */
proto.paralympics.articles.v1.ValidationError.prototype.setErrorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.paralympics.articles.v1.FieldError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.paralympics.articles.v1.FieldError}
 */
proto.paralympics.articles.v1.ValidationError.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.paralympics.articles.v1.FieldError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.paralympics.articles.v1.ValidationError.prototype.clearErrorsList = function() {
  this.setErrorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.FeatureArticleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.FeatureArticleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.FeatureArticleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.FeatureArticleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.FeatureArticleRequest}
 */
proto.paralympics.articles.v1.FeatureArticleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.FeatureArticleRequest;
  return proto.paralympics.articles.v1.FeatureArticleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.FeatureArticleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.FeatureArticleRequest}
 */
proto.paralympics.articles.v1.FeatureArticleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.FeatureArticleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.FeatureArticleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.FeatureArticleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.FeatureArticleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.paralympics.articles.v1.FeatureArticleRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.FeatureArticleRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.FeatureArticleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.FeatureArticleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.FeatureArticleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.FeatureArticleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    featured: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.FeatureArticleResponse}
 */
proto.paralympics.articles.v1.FeatureArticleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.FeatureArticleResponse;
  return proto.paralympics.articles.v1.FeatureArticleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.FeatureArticleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.FeatureArticleResponse}
 */
proto.paralympics.articles.v1.FeatureArticleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFeatured(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.FeatureArticleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.FeatureArticleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.FeatureArticleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.FeatureArticleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatured();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool featured = 1;
 * @return {boolean}
 */
proto.paralympics.articles.v1.FeatureArticleResponse.prototype.getFeatured = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.paralympics.articles.v1.FeatureArticleResponse.prototype.setFeatured = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.FeaturedArticleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.FeaturedArticleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.FeaturedArticleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.FeaturedArticleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.FeaturedArticleRequest}
 */
proto.paralympics.articles.v1.FeaturedArticleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.FeaturedArticleRequest;
  return proto.paralympics.articles.v1.FeaturedArticleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.FeaturedArticleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.FeaturedArticleRequest}
 */
proto.paralympics.articles.v1.FeaturedArticleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.FeaturedArticleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.FeaturedArticleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.FeaturedArticleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.FeaturedArticleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.FeaturedArticleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.FeaturedArticleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.FeaturedArticleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.FeaturedArticleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    article: (f = msg.getArticle()) && proto.paralympics.articles.v1.Article.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.FeaturedArticleResponse}
 */
proto.paralympics.articles.v1.FeaturedArticleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.FeaturedArticleResponse;
  return proto.paralympics.articles.v1.FeaturedArticleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.FeaturedArticleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.FeaturedArticleResponse}
 */
proto.paralympics.articles.v1.FeaturedArticleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.paralympics.articles.v1.Article;
      reader.readMessage(value,proto.paralympics.articles.v1.Article.deserializeBinaryFromReader);
      msg.setArticle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.FeaturedArticleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.FeaturedArticleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.FeaturedArticleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.FeaturedArticleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArticle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.paralympics.articles.v1.Article.serializeBinaryToWriter
    );
  }
};


/**
 * optional Article article = 1;
 * @return {?proto.paralympics.articles.v1.Article}
 */
proto.paralympics.articles.v1.FeaturedArticleResponse.prototype.getArticle = function() {
  return /** @type{?proto.paralympics.articles.v1.Article} */ (
    jspb.Message.getWrapperField(this, proto.paralympics.articles.v1.Article, 1));
};


/** @param {?proto.paralympics.articles.v1.Article|undefined} value */
proto.paralympics.articles.v1.FeaturedArticleResponse.prototype.setArticle = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.FeaturedArticleResponse.prototype.clearArticle = function() {
  this.setArticle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.FeaturedArticleResponse.prototype.hasArticle = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.LiveArticlesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.LiveArticlesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.LiveArticlesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.LiveArticlesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && proto.paralympics.articles.v1.Pagination.toObject(includeInstance, f),
    filter: (f = msg.getFilter()) && proto.paralympics.articles.v1.Filter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.LiveArticlesRequest}
 */
proto.paralympics.articles.v1.LiveArticlesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.LiveArticlesRequest;
  return proto.paralympics.articles.v1.LiveArticlesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.LiveArticlesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.LiveArticlesRequest}
 */
proto.paralympics.articles.v1.LiveArticlesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.paralympics.articles.v1.Pagination;
      reader.readMessage(value,proto.paralympics.articles.v1.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 2:
      var value = new proto.paralympics.articles.v1.Filter;
      reader.readMessage(value,proto.paralympics.articles.v1.Filter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.LiveArticlesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.LiveArticlesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.LiveArticlesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.LiveArticlesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.paralympics.articles.v1.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.paralympics.articles.v1.Filter.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pagination pagination = 1;
 * @return {?proto.paralympics.articles.v1.Pagination}
 */
proto.paralympics.articles.v1.LiveArticlesRequest.prototype.getPagination = function() {
  return /** @type{?proto.paralympics.articles.v1.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.paralympics.articles.v1.Pagination, 1));
};


/** @param {?proto.paralympics.articles.v1.Pagination|undefined} value */
proto.paralympics.articles.v1.LiveArticlesRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.LiveArticlesRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.LiveArticlesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Filter filter = 2;
 * @return {?proto.paralympics.articles.v1.Filter}
 */
proto.paralympics.articles.v1.LiveArticlesRequest.prototype.getFilter = function() {
  return /** @type{?proto.paralympics.articles.v1.Filter} */ (
    jspb.Message.getWrapperField(this, proto.paralympics.articles.v1.Filter, 2));
};


/** @param {?proto.paralympics.articles.v1.Filter|undefined} value */
proto.paralympics.articles.v1.LiveArticlesRequest.prototype.setFilter = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.LiveArticlesRequest.prototype.clearFilter = function() {
  this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.LiveArticlesRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.paralympics.articles.v1.LiveArticlesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.LiveArticlesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.LiveArticlesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.LiveArticlesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.LiveArticlesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    articlesList: jspb.Message.toObjectList(msg.getArticlesList(),
    proto.paralympics.articles.v1.Article.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.LiveArticlesResponse}
 */
proto.paralympics.articles.v1.LiveArticlesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.LiveArticlesResponse;
  return proto.paralympics.articles.v1.LiveArticlesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.LiveArticlesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.LiveArticlesResponse}
 */
proto.paralympics.articles.v1.LiveArticlesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.paralympics.articles.v1.Article;
      reader.readMessage(value,proto.paralympics.articles.v1.Article.deserializeBinaryFromReader);
      msg.addArticles(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.LiveArticlesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.LiveArticlesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.LiveArticlesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.LiveArticlesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArticlesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.paralympics.articles.v1.Article.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated Article articles = 1;
 * @return {!Array<!proto.paralympics.articles.v1.Article>}
 */
proto.paralympics.articles.v1.LiveArticlesResponse.prototype.getArticlesList = function() {
  return /** @type{!Array<!proto.paralympics.articles.v1.Article>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.paralympics.articles.v1.Article, 1));
};


/** @param {!Array<!proto.paralympics.articles.v1.Article>} value */
proto.paralympics.articles.v1.LiveArticlesResponse.prototype.setArticlesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.paralympics.articles.v1.Article=} opt_value
 * @param {number=} opt_index
 * @return {!proto.paralympics.articles.v1.Article}
 */
proto.paralympics.articles.v1.LiveArticlesResponse.prototype.addArticles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.paralympics.articles.v1.Article, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.paralympics.articles.v1.LiveArticlesResponse.prototype.clearArticlesList = function() {
  this.setArticlesList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.paralympics.articles.v1.LiveArticlesResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.paralympics.articles.v1.LiveArticlesResponse.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.paralympics.articles.v1.PinAthletesRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.PinAthletesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.PinAthletesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.PinAthletesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PinAthletesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    articleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    athletesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.PinAthletesRequest}
 */
proto.paralympics.articles.v1.PinAthletesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.PinAthletesRequest;
  return proto.paralympics.articles.v1.PinAthletesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.PinAthletesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.PinAthletesRequest}
 */
proto.paralympics.articles.v1.PinAthletesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setArticleId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAthletes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.PinAthletesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.PinAthletesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.PinAthletesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PinAthletesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArticleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAthletesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string article_id = 1;
 * @return {string}
 */
proto.paralympics.articles.v1.PinAthletesRequest.prototype.getArticleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.PinAthletesRequest.prototype.setArticleId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string athletes = 2;
 * @return {!Array<string>}
 */
proto.paralympics.articles.v1.PinAthletesRequest.prototype.getAthletesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.paralympics.articles.v1.PinAthletesRequest.prototype.setAthletesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.paralympics.articles.v1.PinAthletesRequest.prototype.addAthletes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.paralympics.articles.v1.PinAthletesRequest.prototype.clearAthletesList = function() {
  this.setAthletesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.PinAthletesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.PinAthletesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.PinAthletesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PinAthletesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.PinAthletesResponse}
 */
proto.paralympics.articles.v1.PinAthletesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.PinAthletesResponse;
  return proto.paralympics.articles.v1.PinAthletesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.PinAthletesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.PinAthletesResponse}
 */
proto.paralympics.articles.v1.PinAthletesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.PinAthletesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.PinAthletesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.PinAthletesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PinAthletesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.PinnedAthletesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.PinnedAthletesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.PinnedAthletesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PinnedAthletesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    articleId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.PinnedAthletesRequest}
 */
proto.paralympics.articles.v1.PinnedAthletesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.PinnedAthletesRequest;
  return proto.paralympics.articles.v1.PinnedAthletesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.PinnedAthletesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.PinnedAthletesRequest}
 */
proto.paralympics.articles.v1.PinnedAthletesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setArticleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.PinnedAthletesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.PinnedAthletesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.PinnedAthletesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PinnedAthletesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArticleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string article_id = 1;
 * @return {string}
 */
proto.paralympics.articles.v1.PinnedAthletesRequest.prototype.getArticleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.PinnedAthletesRequest.prototype.setArticleId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.TogglePinnedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.TogglePinnedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.TogglePinnedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.TogglePinnedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.TogglePinnedRequest}
 */
proto.paralympics.articles.v1.TogglePinnedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.TogglePinnedRequest;
  return proto.paralympics.articles.v1.TogglePinnedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.TogglePinnedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.TogglePinnedRequest}
 */
proto.paralympics.articles.v1.TogglePinnedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.TogglePinnedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.TogglePinnedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.TogglePinnedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.TogglePinnedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.paralympics.articles.v1.TogglePinnedRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.TogglePinnedRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.TogglePinnedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.TogglePinnedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.TogglePinnedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.TogglePinnedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pinned: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.TogglePinnedResponse}
 */
proto.paralympics.articles.v1.TogglePinnedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.TogglePinnedResponse;
  return proto.paralympics.articles.v1.TogglePinnedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.TogglePinnedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.TogglePinnedResponse}
 */
proto.paralympics.articles.v1.TogglePinnedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPinned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.TogglePinnedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.TogglePinnedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.TogglePinnedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.TogglePinnedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPinned();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool pinned = 1;
 * @return {boolean}
 */
proto.paralympics.articles.v1.TogglePinnedResponse.prototype.getPinned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.paralympics.articles.v1.TogglePinnedResponse.prototype.setPinned = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.PinnedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.PinnedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.PinnedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PinnedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.PinnedRequest}
 */
proto.paralympics.articles.v1.PinnedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.PinnedRequest;
  return proto.paralympics.articles.v1.PinnedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.PinnedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.PinnedRequest}
 */
proto.paralympics.articles.v1.PinnedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.PinnedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.PinnedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.PinnedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PinnedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.paralympics.articles.v1.PinnedResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.PinnedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.PinnedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.PinnedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PinnedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    articlesList: jspb.Message.toObjectList(msg.getArticlesList(),
    proto.paralympics.articles.v1.Article.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.PinnedResponse}
 */
proto.paralympics.articles.v1.PinnedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.PinnedResponse;
  return proto.paralympics.articles.v1.PinnedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.PinnedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.PinnedResponse}
 */
proto.paralympics.articles.v1.PinnedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.paralympics.articles.v1.Article;
      reader.readMessage(value,proto.paralympics.articles.v1.Article.deserializeBinaryFromReader);
      msg.addArticles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.PinnedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.PinnedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.PinnedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PinnedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArticlesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.paralympics.articles.v1.Article.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Article articles = 1;
 * @return {!Array<!proto.paralympics.articles.v1.Article>}
 */
proto.paralympics.articles.v1.PinnedResponse.prototype.getArticlesList = function() {
  return /** @type{!Array<!proto.paralympics.articles.v1.Article>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.paralympics.articles.v1.Article, 1));
};


/** @param {!Array<!proto.paralympics.articles.v1.Article>} value */
proto.paralympics.articles.v1.PinnedResponse.prototype.setArticlesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.paralympics.articles.v1.Article=} opt_value
 * @param {number=} opt_index
 * @return {!proto.paralympics.articles.v1.Article}
 */
proto.paralympics.articles.v1.PinnedResponse.prototype.addArticles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.paralympics.articles.v1.Article, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.paralympics.articles.v1.PinnedResponse.prototype.clearArticlesList = function() {
  this.setArticlesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.RestoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.RestoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.RestoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.RestoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.RestoreRequest}
 */
proto.paralympics.articles.v1.RestoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.RestoreRequest;
  return proto.paralympics.articles.v1.RestoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.RestoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.RestoreRequest}
 */
proto.paralympics.articles.v1.RestoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.RestoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.RestoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.RestoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.RestoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.paralympics.articles.v1.RestoreRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.RestoreRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.RestoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.RestoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.RestoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.RestoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    article: (f = msg.getArticle()) && proto.paralympics.articles.v1.Article.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.RestoreResponse}
 */
proto.paralympics.articles.v1.RestoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.RestoreResponse;
  return proto.paralympics.articles.v1.RestoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.RestoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.RestoreResponse}
 */
proto.paralympics.articles.v1.RestoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.paralympics.articles.v1.Article;
      reader.readMessage(value,proto.paralympics.articles.v1.Article.deserializeBinaryFromReader);
      msg.setArticle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.RestoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.RestoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.RestoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.RestoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArticle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.paralympics.articles.v1.Article.serializeBinaryToWriter
    );
  }
};


/**
 * optional Article article = 1;
 * @return {?proto.paralympics.articles.v1.Article}
 */
proto.paralympics.articles.v1.RestoreResponse.prototype.getArticle = function() {
  return /** @type{?proto.paralympics.articles.v1.Article} */ (
    jspb.Message.getWrapperField(this, proto.paralympics.articles.v1.Article, 1));
};


/** @param {?proto.paralympics.articles.v1.Article|undefined} value */
proto.paralympics.articles.v1.RestoreResponse.prototype.setArticle = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.paralympics.articles.v1.RestoreResponse.prototype.clearArticle = function() {
  this.setArticle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.paralympics.articles.v1.RestoreResponse.prototype.hasArticle = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.PurgeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.PurgeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.PurgeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PurgeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.PurgeRequest}
 */
proto.paralympics.articles.v1.PurgeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.PurgeRequest;
  return proto.paralympics.articles.v1.PurgeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.PurgeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.PurgeRequest}
 */
proto.paralympics.articles.v1.PurgeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.PurgeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.PurgeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.PurgeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PurgeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.paralympics.articles.v1.PurgeRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.paralympics.articles.v1.PurgeRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.paralympics.articles.v1.PurgeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.paralympics.articles.v1.PurgeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.paralympics.articles.v1.PurgeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PurgeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.paralympics.articles.v1.PurgeResponse}
 */
proto.paralympics.articles.v1.PurgeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.paralympics.articles.v1.PurgeResponse;
  return proto.paralympics.articles.v1.PurgeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.paralympics.articles.v1.PurgeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.paralympics.articles.v1.PurgeResponse}
 */
proto.paralympics.articles.v1.PurgeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.paralympics.articles.v1.PurgeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.paralympics.articles.v1.PurgeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.paralympics.articles.v1.PurgeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.paralympics.articles.v1.PurgeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.paralympics.articles.v1.SortField = {
  CREATE_DATE: 0,
  UPDATE_DATE: 1,
  DELETE_DATE: 2,
  PUBLISH_FROM: 3,
  PUBLISH_UNTIL: 4,
  PUBLISHED: 5,
  TITLE: 6
};

/**
 * @enum {number}
 */
proto.paralympics.articles.v1.PinnedFilter = {
  ALL: 0,
  PINNED: 1,
  NOT_PINNED: 2
};

/**
 * @enum {number}
 */
proto.paralympics.articles.v1.SortDirection = {
  ASC: 0,
  DSC: 1
};

/**
 * @enum {number}
 */
proto.paralympics.articles.v1.Field = {
  ARTICLEID: 0,
  ARTICLESLUG: 1,
  ARTICLETITLE: 2,
  ARTICLEBLURB: 3,
  ARTICLEPUBLISHFROM: 4,
  ARTICLEPUBLISHUNTIL: 5,
  ARTICLEIMAGECARD: 6,
  ARTICLEIMAGEHERO: 7
};

/**
 * @enum {number}
 */
proto.paralympics.articles.v1.ErrorCode = {
  REQUIRED: 0,
  INVALIDUUIDV4: 1,
  INVALIDURI: 2,
  PUBLISHUNTILGTPUBLISHFROM: 3,
  IMAGEINVALID: 4
};

/**
 * @enum {number}
 */
proto.paralympics.articles.v1.Category = {
  NONE: 0,
  SUPPORT_FUNDRAISING: 1,
  SUPPORT_EVENTS: 2,
  SUPPORT_CORPORATE: 3,
  SUPPORT_GIFTS: 4
};

goog.object.extend(exports, proto.paralympics.articles.v1);
